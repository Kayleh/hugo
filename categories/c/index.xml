<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C on Kayleh</title>
    <link>https://blog.kayleh.top/categories/c/</link>
    <description>Recent content in C on Kayleh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 Sep 2020 13:01:12 +0800</lastBuildDate><atom:link href="https://blog.kayleh.top/categories/c/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>值传递</title>
      <link>https://blog.kayleh.top/%E5%87%BD%E6%95%B0%E5%92%8C%E6%8C%87%E9%92%88/</link>
      <pubDate>Thu, 10 Sep 2020 13:01:12 +0800</pubDate>
      
      <guid>https://blog.kayleh.top/%E5%87%BD%E6%95%B0%E5%92%8C%E6%8C%87%E9%92%88/</guid>
      <description>传值调用 向函数传递参数的传值调用方法，把参数的实际值复制给函数的形式参数。在这种情况下，修改函数内的形式参数不会影响实际参数。默认情况下，C++ 使用传值调用方法来传递参数。一般来说，这意味着函数内的代码不会改变用于调用函数的实际参数。
#include &amp;lt;iostream&amp;gt;using namespace std; // 函数声明 void swap(int x, int y); // 函数定义 void swap(int x, int y) { int temp; temp = x; /* 保存 x 的值 */ x = y; /* 把 y 赋值给 x */ y = temp; /* 把 x 赋值给 y */ return; } int main() { // 局部变量声明  int a = 100; int b = 200; cout &amp;lt;&amp;lt; &amp;#34;before swap,a:&amp;#34; &amp;lt;&amp;lt; a &amp;lt;&amp;lt; endl; cout &amp;lt;&amp;lt; &amp;#34;before swap,b:&amp;#34; &amp;lt;&amp;lt; b &amp;lt;&amp;lt; endl; // 调用函数来交换值  swap(a, b); cout &amp;lt;&amp;lt; &amp;#34;After swap,a:&amp;#34; &amp;lt;&amp;lt; a &amp;lt;&amp;lt; endl; cout &amp;lt;&amp;lt; &amp;#34;After swap,b:&amp;#34; &amp;lt;&amp;lt; b &amp;lt;&amp;lt; endl; return 0; }  指针调用 向函数传递参数的指针调用方法，把参数的地址复制给形式参数。在函数内，该地址用于访问调用中要用到的实际参数。这意味着，修改形式参数会影响实际参数。</description>
    </item>
    
  </channel>
</rss>
